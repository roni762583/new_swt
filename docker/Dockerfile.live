# SWT Live Trading Container
# Production-grade Docker image for live trading system
# 
# Features:
# - Multi-stage build for optimal size
# - Non-root user for security
# - Health checks and monitoring
# - Resource limits and optimization
# - Production logging configuration

# Build stage - Install dependencies and build optimizations
FROM python:3.11-slim as builder

# Set build arguments
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Add metadata
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.title="SWT Live Trading System" \
      org.opencontainers.image.description="Production live trading system with Episode 13475 compatibility" \
      org.opencontainers.image.vendor="SWT Trading Systems"

# Install system dependencies for building
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /build

# Copy requirements first for better caching
COPY requirements.txt .
COPY pyproject.toml .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip wheel setuptools && \
    pip install --no-cache-dir --user -r requirements.txt

# Production stage - Minimal runtime image
FROM python:3.11-slim as production

# Install runtime system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    tini \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN groupadd --gid 1001 swt && \
    useradd --uid 1001 --gid swt --shell /bin/bash --create-home swt

# Set up application directories
RUN mkdir -p /app/data /app/logs /app/checkpoints /app/config && \
    chown -R swt:swt /app

# Copy Python packages from builder
COPY --from=builder /root/.local /home/swt/.local

# Set environment variables
ENV PYTHONPATH=/app \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH=/home/swt/.local/bin:$PATH \
    SWT_ENVIRONMENT=production \
    SWT_LOG_LEVEL=INFO \
    SWT_DATA_DIR=/app/data \
    SWT_LOG_DIR=/app/logs \
    SWT_CONFIG_DIR=/app/config

# Switch to non-root user
USER swt
WORKDIR /app

# Copy application code
COPY --chown=swt:swt . .

# Create necessary directories and set permissions
RUN mkdir -p logs data checkpoints results && \
    chmod +x docker/entrypoint.sh

# Health check configuration
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8080/health', timeout=5)" || exit 1

# Resource limits (can be overridden at runtime)
ENV SWT_MAX_MEMORY=2G \
    SWT_MAX_CPU=2 \
    SWT_WORKER_PROCESSES=1

# Expose monitoring port
EXPOSE 8080

# Use tini as init system for proper signal handling
ENTRYPOINT ["tini", "--", "./docker/entrypoint.sh"]

# Default command - start live trading
CMD ["live-trade"]