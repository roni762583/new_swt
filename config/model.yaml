# SWT Model Configuration
# CRITICAL: Network architectures compatible with Episode 13475

# Network Architecture (Episode 13475 compatible)
network:
  architecture: "standard"               # Episode 13475 used standard architecture
  hidden_dim: 256                        # VERIFIED: Episode 13475 hidden dimension
  num_layers: 3                          # VERIFIED: Episode 13475 network depth
  activation: "relu"                     # Standard activation
  dropout: 0.1                           # Standard dropout rate
  
  # Architecture settings (Episode 13475 verified)
  residual_connections: false            # Episode 13475 did not use residuals
  layer_norm: true                       # Layer normalization enabled
  batch_norm: false                      # Batch norm disabled (standard)
  
# Individual Network Configurations (Episode 13475 exact)
networks:
  # Representation Network (Encoder)
  representation:
    input_dims:
      market_features: 128               # EXACT: WST feature dimension
      position_features: 9               # CRITICAL: Must be exactly 9D
    output_dim: 256                      # EXACT: Episode 13475 latent dimension
    
    # Episode 13475 verified architecture
    architecture:
      market_branch: [128, 256]          # Market feature processing
      position_branch: [9, 64]           # Position feature processing  
      fusion_layers: [320, 256]          # Concatenated feature fusion
      
  # Policy Network (Episode 13475 exact)
  policy:
    input_dim: 256                       # EXACT: Latent state dimension
    output_dim: 4                        # EXACT: 4 actions (HOLD, BUY, SELL, CLOSE)
    
    architecture:
      hidden_layers: [256, 128, 64]      # VERIFIED: Episode 13475 policy layers
      output_activation: "softmax"       # Action probability distribution
      
  # Value Network (Episode 13475 exact)
  value:
    input_dim: 256                       # EXACT: Latent state dimension
    support_size: 601                    # EXACT: Episode 13475 categorical support
    support_range: [-300.0, 300.0]      # EXACT: Value range in pips
    
    architecture:
      hidden_layers: [256, 128, 64]      # VERIFIED: Episode 13475 value layers
      output_activation: "softmax"       # Categorical value distribution
      
  # Dynamics Network (World Model) - Episode 13475 exact
  dynamics:
    input_dim: 288                       # EXACT: Latent + action (256 + 32)
    output_dim: 256                      # EXACT: Next state dimension
    action_embedding_dim: 32             # EXACT: Action embedding size
    
    architecture:
      afterstate_layers: [288, 256]      # Afterstate computation
      reward_head: [256, 601]            # Reward prediction (categorical)
      transition_layers: [288, 256]      # State transition modeling
      
  # Chance Encoder (Stochastic MuZero component)
  chance:
    input_dim: 512                       # 4 x 128 (4-step history)
    output_dim: 32                       # Chance encoding dimension
    
    architecture:
      encoding_layers: [512, 128, 32]    # Stochastic uncertainty encoding

# Training Configuration (Episode 13475 compatible)
training:
  optimizer: "adam"                      # VERIFIED: Episode 13475 used Adam
  learning_rate: 0.0002                  # VERIFIED: Episode 13475 learning rate
  weight_decay: 1e-4                     # Standard L2 regularization
  
  # Learning rate schedule (Episode 13475 compatible)
  lr_schedule:
    type: "constant"                     # Episode 13475 used constant LR
    min_lr: 1e-6                         # Minimum learning rate (not used)
    warmup_steps: 0                      # No warmup (Episode 13475 standard)
    
  # Gradient handling (Episode 13475 settings)
  gradient_clipping:
    enable: true                         # VERIFIED: Episode 13475 used clipping
    max_norm: 0.5                        # VERIFIED: Episode 13475 clip norm
    
  # Loss weights (Episode 13475 exact)
  loss_weights:
    policy_loss: 1.0                     # EXACT: Episode 13475 policy weight
    value_loss: 1.0                      # EXACT: Episode 13475 value weight
    reward_loss: 1.0                     # EXACT: Episode 13475 reward weight
    consistency_loss: 0.0                # Disabled (not in Episode 13475)
    prefix_loss: 0.0                     # Disabled (not in Episode 13475)
    
  # Training stability (Episode 13475 settings)
  stability:
    enable_gradient_checkpointing: false # Not used in Episode 13475
    enable_mixed_precision: false       # Not used in Episode 13475
    
# Model Checkpointing (Episode 13475 compatible)
checkpointing:
  save_frequency: 25                     # EXACT: Episode 13475 saved every 25 episodes
  max_checkpoints: 10                    # Keep last 10 checkpoints
  save_best_only: false                  # Save all checkpoints
  
  # Checkpoint validation
  validation:
    validate_on_load: true               # Validate checkpoints when loading
    check_architecture: true             # Verify network architecture matches
    check_dimensions: true               # Verify tensor dimensions match
    
# Device Configuration (Episode 13475 environment)
device:
  type: "auto"                          # Auto-detect best device
  gpu_memory_fraction: 0.8              # Conservative GPU memory usage
  allow_growth: true                    # Dynamic GPU memory allocation

# Episode 13475 Verification
episode_13475_verification:
  network_architecture: "standard"       # VERIFIED: Standard architecture
  latent_dimension: 256                  # VERIFIED: 256-dim latent space
  position_features: 9                   # CRITICAL: 9D position features
  action_space: 4                        # VERIFIED: 4 actions
  value_support: 601                     # VERIFIED: 601-point support
  learning_rate: 0.0002                  # VERIFIED: 0.0002 LR
  gradient_clipping: 0.5                 # VERIFIED: 0.5 clip norm
  checkpoint_frequency: 25               # VERIFIED: Save every 25 episodes

# Compatibility Flags
compatibility:
  strict_episode_13475_mode: true        # CRITICAL: Enforce exact compatibility
  allow_architecture_changes: false     # Do not allow architecture modifications
  validate_dimensions: true             # Always validate tensor dimensions
  enforce_exact_parameters: true        # Enforce exact parameter matching