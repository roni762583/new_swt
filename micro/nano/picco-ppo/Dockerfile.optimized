# Optimized multi-stage Dockerfile with maximum caching
# Stage 1: Base dependencies (rarely changes)
FROM python:3.11-slim AS base-deps

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Stage 2: Python dependencies (changes when requirements change)
FROM base-deps AS python-deps

COPY requirements-minimal.txt requirements.txt

# Use BuildKit cache mount to avoid re-downloading packages
# The cache persists between builds on the host
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -r requirements.txt && \
    # Pre-compile Python bytecode for faster startup
    python -m compileall /usr/local/lib/python3.11/site-packages

# Stage 3: Final application
FROM python-deps AS final

WORKDIR /app

# Copy application code
COPY train_minimal.py validate_minimal.py run.py ./
COPY train.py evaluate.py checkpoint_manager.py ./
COPY env/ ./env/

# Create output directories
RUN mkdir -p models results checkpoints

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV DOCKER_BUILDKIT=1
# Use cache for any runtime pip installs
ENV PIP_CACHE_DIR=/root/.cache/pip

CMD ["python", "run.py", "session"]