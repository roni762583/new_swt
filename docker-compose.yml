version: '3.8'

services:
  # Training Container - Resumes from last checkpoint, targets 1M sessions
  training:
    build:
      context: .
      dockerfile: Dockerfile.training
    image: swt-training:latest
    container_name: swt_training_container
    restart: unless-stopped
    working_dir: /workspace
    volumes:
      - .:/workspace
      - ./checkpoints:/workspace/checkpoints
      - ./logs/training:/workspace/logs
      - ./cache:/workspace/cache
      - ./training_state:/workspace/training_state
    environment:
      - PYTHONPATH=/workspace
      - OMP_NUM_THREADS=6
      - MKL_NUM_THREADS=6
      - NUMBA_NUM_THREADS=6
      - TARGET_EPISODES=1000000
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 16G
    command: ["bash", "/workspace/scripts/start_training.sh"]
    healthcheck:
      test: ["CMD", "python", "-c", "print('Training container healthy')"]
      interval: 60s
      timeout: 10s
      retries: 3

  # Validation Container - Monitors for new best checkpoints
  validation:
    build:
      context: .
      dockerfile: Dockerfile.validation
    image: swt-validation:latest
    container_name: swt_validation_container
    restart: unless-stopped
    working_dir: /workspace
    volumes:
      - .:/workspace
      - ./validation_results:/workspace/validation_results
      - ./logs/validation:/workspace/logs
      - ./checkpoints:/workspace/checkpoints
      - ./cache:/workspace/cache
    environment:
      - PYTHONPATH=/workspace
      - OMP_NUM_THREADS=6
      - MKL_NUM_THREADS=6
      - NUMBA_NUM_THREADS=6
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 12G
    command: ["bash", "/workspace/scripts/start_validation.sh"]
    depends_on:
      - training
    healthcheck:
      test: ["CMD", "python", "-c", "print('Validation container healthy')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Live Trading Container - Ready but waiting for explicit instruction
  live:
    build:
      context: .
      dockerfile: Dockerfile.training
    image: swt-training:latest
    container_name: swt_live_trading
    restart: unless-stopped
    working_dir: /workspace
    volumes:
      - .:/workspace
      - ./sessions:/workspace/sessions
      - ./logs/live:/workspace/logs
      - ./checkpoints:/workspace/checkpoints
      - ./live_state:/workspace/live_state
    environment:
      - PYTHONPATH=/workspace
      - OMP_NUM_THREADS=4
      - MKL_NUM_THREADS=4
      - NUMBA_NUM_THREADS=4
      - OANDA_API_KEY=${OANDA_API_KEY}
      - OANDA_ACCOUNT_ID=${OANDA_ACCOUNT_ID}
      - OANDA_ENVIRONMENT=${OANDA_ENVIRONMENT:-practice}
      - IS_DEMO=${IS_DEMO:-true}
      - INSTRUMENT=${INSTRUMENT:-GBP_JPY}
      - MAX_POSITION_SIZE=${MAX_POSITION_SIZE:-1}
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
    command: ["bash", "/workspace/scripts/start_live.sh"]
    depends_on:
      - validation
    healthcheck:
      test: ["CMD", "python", "-c", "print('Live trading container healthy')"]
      interval: 30s
      timeout: 10s
      retries: 3
    network_mode: host  # Use host network for OANDA API access

networks:
  default:
    name: swt_network
    driver: bridge