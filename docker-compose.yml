version: '3.8'

services:
  # Micro Training Container
  micro-training:
    build:
      context: .
      dockerfile: Dockerfile.micro
    image: micro-muzero:latest
    container_name: micro_training
    restart: unless-stopped
    environment:
      - PYTHONPATH=/workspace
      - MODE=train
      - TZ=UTC
    volumes:
      - ./data:/workspace/data:ro
      - ./micro/checkpoints:/workspace/micro/checkpoints
      - ./micro/logs:/workspace/micro/logs
    command: python3 /workspace/micro/training/train_micro_muzero.py
    networks:
      - micro-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 4G
          cpus: '2.0'
    healthcheck:
      test: ["CMD", "python3", "-c", "import torch; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Micro Validation Container
  micro-validation:
    build:
      context: .
      dockerfile: Dockerfile.micro
    image: micro-muzero:latest
    container_name: micro_validation
    restart: unless-stopped
    environment:
      - PYTHONPATH=/workspace
      - MODE=validate
      - TZ=UTC
    volumes:
      - ./data:/workspace/data:ro
      - ./micro/checkpoints:/workspace/micro/checkpoints:ro
      - ./micro/validation_results:/workspace/micro/validation_results
    command: python3 /workspace/micro/validation/validate_micro_watcher.py
    networks:
      - micro-network
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    depends_on:
      - micro-training

  # Micro Live Trading Container
  micro-live:
    build:
      context: .
      dockerfile: Dockerfile.micro
    image: micro-muzero:latest
    container_name: micro_live
    restart: unless-stopped
    environment:
      - PYTHONPATH=/workspace
      - MODE=live
      - TZ=UTC
      - OANDA_API_TOKEN=${OANDA_API_TOKEN}
      - OANDA_ACCOUNT_ID=${OANDA_ACCOUNT_ID}
      - OANDA_ENVIRONMENT=${OANDA_ENVIRONMENT:-practice}
    volumes:
      - ./micro/checkpoints:/workspace/micro/checkpoints:ro
      - ./micro/logs:/workspace/micro/logs
    command: python3 /workspace/micro/live/trade_micro.py --checkpoint best
    networks:
      - micro-network
    ports:
      - "8081:8081"  # Micro monitoring dashboard
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    depends_on:
      - micro-training

networks:
  micro-network:
    driver: bridge

volumes:
  micro-cache:
    driver: local